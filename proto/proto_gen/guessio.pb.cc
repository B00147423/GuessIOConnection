// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: guessio.proto
// Protobuf C++ Version: 5.29.3

#include "guessio.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace guessio {

inline constexpr JoinRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JoinRequest::JoinRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JoinRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinRequestDefaultTypeInternal() {}
  union {
    JoinRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinRequestDefaultTypeInternal _JoinRequest_default_instance_;

inline constexpr JoinReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JoinReply::JoinReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JoinReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinReplyDefaultTypeInternal() {}
  union {
    JoinReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinReplyDefaultTypeInternal _JoinReply_default_instance_;

inline constexpr GuessRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guess_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GuessRequest::GuessRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GuessRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GuessRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GuessRequestDefaultTypeInternal() {}
  union {
    GuessRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GuessRequestDefaultTypeInternal _GuessRequest_default_instance_;

inline constexpr GuessReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        correct_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GuessReply::GuessReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GuessReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GuessReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GuessReplyDefaultTypeInternal() {}
  union {
    GuessReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GuessReplyDefaultTypeInternal _GuessReply_default_instance_;
}  // namespace guessio
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_guessio_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_guessio_2eproto = nullptr;
const ::uint32_t
    TableStruct_guessio_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::guessio::JoinRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::guessio::JoinRequest, _impl_.username_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::guessio::JoinReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::guessio::JoinReply, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::guessio::GuessRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::guessio::GuessRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::guessio::GuessRequest, _impl_.guess_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::guessio::GuessReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::guessio::GuessReply, _impl_.correct_),
        PROTOBUF_FIELD_OFFSET(::guessio::GuessReply, _impl_.hint_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::guessio::JoinRequest)},
        {9, -1, -1, sizeof(::guessio::JoinReply)},
        {18, -1, -1, sizeof(::guessio::GuessRequest)},
        {28, -1, -1, sizeof(::guessio::GuessReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::guessio::_JoinRequest_default_instance_._instance,
    &::guessio::_JoinReply_default_instance_._instance,
    &::guessio::_GuessRequest_default_instance_._instance,
    &::guessio::_GuessReply_default_instance_._instance,
};
const char descriptor_table_protodef_guessio_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rguessio.proto\022\007guessio\"\037\n\013JoinRequest\022"
    "\020\n\010username\030\001 \001(\t\"\034\n\tJoinReply\022\017\n\007messag"
    "e\030\001 \001(\t\"/\n\014GuessRequest\022\020\n\010username\030\001 \001("
    "\t\022\r\n\005guess\030\002 \001(\t\"+\n\nGuessReply\022\017\n\007correc"
    "t\030\001 \001(\010\022\014\n\004hint\030\002 \001(\t2}\n\014GuessService\0224\n"
    "\010JoinGame\022\024.guessio.JoinRequest\032\022.guessi"
    "o.JoinReply\0227\n\tMakeGuess\022\025.guessio.Guess"
    "Request\032\023.guessio.GuessReplyb\006proto3"
};
static ::absl::once_flag descriptor_table_guessio_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_guessio_2eproto = {
    false,
    false,
    316,
    descriptor_table_protodef_guessio_2eproto,
    "guessio.proto",
    &descriptor_table_guessio_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_guessio_2eproto::offsets,
    file_level_enum_descriptors_guessio_2eproto,
    file_level_service_descriptors_guessio_2eproto,
};
namespace guessio {
// ===================================================================

class JoinRequest::_Internal {
 public:
};

JoinRequest::JoinRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:guessio.JoinRequest)
}
inline PROTOBUF_NDEBUG_INLINE JoinRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::guessio::JoinRequest& from_msg)
      : username_(arena, from.username_),
        _cached_size_{0} {}

JoinRequest::JoinRequest(
    ::google::protobuf::Arena* arena,
    const JoinRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JoinRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:guessio.JoinRequest)
}
inline PROTOBUF_NDEBUG_INLINE JoinRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void JoinRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
JoinRequest::~JoinRequest() {
  // @@protoc_insertion_point(destructor:guessio.JoinRequest)
  SharedDtor(*this);
}
inline void JoinRequest::SharedDtor(MessageLite& self) {
  JoinRequest& this_ = static_cast<JoinRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.~Impl_();
}

inline void* JoinRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JoinRequest(arena);
}
constexpr auto JoinRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JoinRequest),
                                            alignof(JoinRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JoinRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JoinRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JoinRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JoinRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JoinRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JoinRequest>(), &JoinRequest::ByteSizeLong,
            &JoinRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_._cached_size_),
        false,
    },
    &JoinRequest::kDescriptorMethods,
    &descriptor_table_guessio_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JoinRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> JoinRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::guessio::JoinRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\10\0\0\0\0\0\0"
    "guessio.JoinRequest"
    "username"
  }},
};

PROTOBUF_NOINLINE void JoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:guessio.JoinRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JoinRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JoinRequest& this_ = static_cast<const JoinRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JoinRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JoinRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:guessio.JoinRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "guessio.JoinRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:guessio.JoinRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JoinRequest::ByteSizeLong(const MessageLite& base) {
          const JoinRequest& this_ = static_cast<const JoinRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JoinRequest::ByteSizeLong() const {
          const JoinRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:guessio.JoinRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JoinRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JoinRequest*>(&to_msg);
  auto& from = static_cast<const JoinRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:guessio.JoinRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoinRequest::CopyFrom(const JoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guessio.JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JoinRequest::InternalSwap(JoinRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
}

::google::protobuf::Metadata JoinRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JoinReply::_Internal {
 public:
};

JoinReply::JoinReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:guessio.JoinReply)
}
inline PROTOBUF_NDEBUG_INLINE JoinReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::guessio::JoinReply& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

JoinReply::JoinReply(
    ::google::protobuf::Arena* arena,
    const JoinReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JoinReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:guessio.JoinReply)
}
inline PROTOBUF_NDEBUG_INLINE JoinReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void JoinReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
JoinReply::~JoinReply() {
  // @@protoc_insertion_point(destructor:guessio.JoinReply)
  SharedDtor(*this);
}
inline void JoinReply::SharedDtor(MessageLite& self) {
  JoinReply& this_ = static_cast<JoinReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* JoinReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JoinReply(arena);
}
constexpr auto JoinReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JoinReply),
                                            alignof(JoinReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JoinReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JoinReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JoinReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JoinReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JoinReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JoinReply>(), &JoinReply::ByteSizeLong,
            &JoinReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JoinReply, _impl_._cached_size_),
        false,
    },
    &JoinReply::kDescriptorMethods,
    &descriptor_table_guessio_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JoinReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 33, 2> JoinReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::guessio::JoinReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JoinReply, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(JoinReply, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\7\0\0\0\0\0\0"
    "guessio.JoinReply"
    "message"
  }},
};

PROTOBUF_NOINLINE void JoinReply::Clear() {
// @@protoc_insertion_point(message_clear_start:guessio.JoinReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JoinReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JoinReply& this_ = static_cast<const JoinReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JoinReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JoinReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:guessio.JoinReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message = 1;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "guessio.JoinReply.message");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:guessio.JoinReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JoinReply::ByteSizeLong(const MessageLite& base) {
          const JoinReply& this_ = static_cast<const JoinReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JoinReply::ByteSizeLong() const {
          const JoinReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:guessio.JoinReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string message = 1;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JoinReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JoinReply*>(&to_msg);
  auto& from = static_cast<const JoinReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:guessio.JoinReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoinReply::CopyFrom(const JoinReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guessio.JoinReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JoinReply::InternalSwap(JoinReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata JoinReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GuessRequest::_Internal {
 public:
};

GuessRequest::GuessRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:guessio.GuessRequest)
}
inline PROTOBUF_NDEBUG_INLINE GuessRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::guessio::GuessRequest& from_msg)
      : username_(arena, from.username_),
        guess_(arena, from.guess_),
        _cached_size_{0} {}

GuessRequest::GuessRequest(
    ::google::protobuf::Arena* arena,
    const GuessRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GuessRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:guessio.GuessRequest)
}
inline PROTOBUF_NDEBUG_INLINE GuessRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        guess_(arena),
        _cached_size_{0} {}

inline void GuessRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GuessRequest::~GuessRequest() {
  // @@protoc_insertion_point(destructor:guessio.GuessRequest)
  SharedDtor(*this);
}
inline void GuessRequest::SharedDtor(MessageLite& self) {
  GuessRequest& this_ = static_cast<GuessRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.guess_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GuessRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GuessRequest(arena);
}
constexpr auto GuessRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GuessRequest),
                                            alignof(GuessRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GuessRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GuessRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GuessRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GuessRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GuessRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GuessRequest>(), &GuessRequest::ByteSizeLong,
            &GuessRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GuessRequest, _impl_._cached_size_),
        false,
    },
    &GuessRequest::kDescriptorMethods,
    &descriptor_table_guessio_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GuessRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> GuessRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::guessio::GuessRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string guess = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GuessRequest, _impl_.guess_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GuessRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(GuessRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string guess = 2;
    {PROTOBUF_FIELD_OFFSET(GuessRequest, _impl_.guess_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\10\5\0\0\0\0\0"
    "guessio.GuessRequest"
    "username"
    "guess"
  }},
};

PROTOBUF_NOINLINE void GuessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:guessio.GuessRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.guess_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GuessRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GuessRequest& this_ = static_cast<const GuessRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GuessRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GuessRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:guessio.GuessRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "guessio.GuessRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string guess = 2;
          if (!this_._internal_guess().empty()) {
            const std::string& _s = this_._internal_guess();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "guessio.GuessRequest.guess");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:guessio.GuessRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GuessRequest::ByteSizeLong(const MessageLite& base) {
          const GuessRequest& this_ = static_cast<const GuessRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GuessRequest::ByteSizeLong() const {
          const GuessRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:guessio.GuessRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string guess = 2;
            if (!this_._internal_guess().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_guess());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GuessRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GuessRequest*>(&to_msg);
  auto& from = static_cast<const GuessRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:guessio.GuessRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_guess().empty()) {
    _this->_internal_set_guess(from._internal_guess());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GuessRequest::CopyFrom(const GuessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guessio.GuessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GuessRequest::InternalSwap(GuessRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.guess_, &other->_impl_.guess_, arena);
}

::google::protobuf::Metadata GuessRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GuessReply::_Internal {
 public:
};

GuessReply::GuessReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:guessio.GuessReply)
}
inline PROTOBUF_NDEBUG_INLINE GuessReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::guessio::GuessReply& from_msg)
      : hint_(arena, from.hint_),
        _cached_size_{0} {}

GuessReply::GuessReply(
    ::google::protobuf::Arena* arena,
    const GuessReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GuessReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.correct_ = from._impl_.correct_;

  // @@protoc_insertion_point(copy_constructor:guessio.GuessReply)
}
inline PROTOBUF_NDEBUG_INLINE GuessReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hint_(arena),
        _cached_size_{0} {}

inline void GuessReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.correct_ = {};
}
GuessReply::~GuessReply() {
  // @@protoc_insertion_point(destructor:guessio.GuessReply)
  SharedDtor(*this);
}
inline void GuessReply::SharedDtor(MessageLite& self) {
  GuessReply& this_ = static_cast<GuessReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hint_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GuessReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GuessReply(arena);
}
constexpr auto GuessReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GuessReply),
                                            alignof(GuessReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GuessReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GuessReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GuessReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GuessReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GuessReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GuessReply>(), &GuessReply::ByteSizeLong,
            &GuessReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GuessReply, _impl_._cached_size_),
        false,
    },
    &GuessReply::kDescriptorMethods,
    &descriptor_table_guessio_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GuessReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 31, 2> GuessReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::guessio::GuessReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string hint = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GuessReply, _impl_.hint_)}},
    // bool correct = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GuessReply, _impl_.correct_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GuessReply, _impl_.correct_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool correct = 1;
    {PROTOBUF_FIELD_OFFSET(GuessReply, _impl_.correct_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string hint = 2;
    {PROTOBUF_FIELD_OFFSET(GuessReply, _impl_.hint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\4\0\0\0\0\0"
    "guessio.GuessReply"
    "hint"
  }},
};

PROTOBUF_NOINLINE void GuessReply::Clear() {
// @@protoc_insertion_point(message_clear_start:guessio.GuessReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hint_.ClearToEmpty();
  _impl_.correct_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GuessReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GuessReply& this_ = static_cast<const GuessReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GuessReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GuessReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:guessio.GuessReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool correct = 1;
          if (this_._internal_correct() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_correct(), target);
          }

          // string hint = 2;
          if (!this_._internal_hint().empty()) {
            const std::string& _s = this_._internal_hint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "guessio.GuessReply.hint");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:guessio.GuessReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GuessReply::ByteSizeLong(const MessageLite& base) {
          const GuessReply& this_ = static_cast<const GuessReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GuessReply::ByteSizeLong() const {
          const GuessReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:guessio.GuessReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string hint = 2;
            if (!this_._internal_hint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hint());
            }
            // bool correct = 1;
            if (this_._internal_correct() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GuessReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GuessReply*>(&to_msg);
  auto& from = static_cast<const GuessReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:guessio.GuessReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hint().empty()) {
    _this->_internal_set_hint(from._internal_hint());
  }
  if (from._internal_correct() != 0) {
    _this->_impl_.correct_ = from._impl_.correct_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GuessReply::CopyFrom(const GuessReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guessio.GuessReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GuessReply::InternalSwap(GuessReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hint_, &other->_impl_.hint_, arena);
        swap(_impl_.correct_, other->_impl_.correct_);
}

::google::protobuf::Metadata GuessReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace guessio
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_guessio_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
